---
title: "Homework 4, Prioritizing Potential Aquaculture"
author: "Eva Newby"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

#### Link to Homework 4 Description: https://eds-223-geospatial.github.io/assignments/HW4.html

Species of choice- Common cuttlefish (Sepia officinalis) https://www.sealifebase.ca/summary/Sepia-officinalis.html

```{r}
# Load Packages
library(tidyverse)
library(stars)
library(tmap)
library(sf)
library(here)
library(terra)
```

## Prepare Data

```{r}
# Read in shapefile for the West Coast EEZ
wc_regions <- vect(here("data", "wc_regions_clean[1].shp"))%>%
  terra::project("EPSG:4326")
```

```{r}
# Read in bathymetry raster
depth <- terra::rast(here("data", "depth[1].tif"))%>%
  terra::project("EPSG:4326")
```

```{r}
# Read in SST rasters
# Create list of all SST .tif files 
sst_path = here("data")

sst_files <- list.files(sst_path, 
                        pattern = glob2rx("*average_annual_sst_*.tif$"),
                        full.names = TRUE)
# Create a raster stack 
sst <- terra::rast(sst_files)%>%
  terra::project("EPSG:4326")
```

```{r}
# Check CRS' and transform to match
print(st_crs(depth))
print(st_crs(wc_regions))
print(st_crs(sst))
```

## Process data

```{r}
# View rasters to see what we are working with
plot(sst)
plot(wc_regions)
plot(depth)
```

```{r}
# Find the mean SST from 2008-2012 (e.g. create single raster of average SST)
avg_sst <- mean(sst)

# Plot to check
plot(avg_sst)
```

```{r}
# Convert average SST from Kelvin to Celsius (hint: subtract by 273.15)
avg_sst_c <- avg_sst - 273.15

# Verify update
avg_sst_c
```

```{r}
# Crop depth raster to match the extent of the SST raster
depth <- crop(x = depth, y = avg_sst_c)

# View the plot
plot(depth)
```

```{r}
# note: the resolutions of the SST and depth data do not match
# Resample the depth data to match the resolution of the SST data using the nearest neighbor approach
depth <- resample(depth,
                  avg_sst_c,
                  method = "near")
                  
```

```{r}
# Check that the depth and SST match in resolution, extent, and coordinate reference system (hint: can the rasters be stacked?)
cat("Do the extents match?",
    terra::ext(avg_sst_c) == terra::ext(depth),
    "\nDo the resolutions match?",
    terra::res(avg_sst_c) == terra::res(depth),
    "\n Do the CRS' match?",
    terra::crs(avg_sst_c) == terra::crs(depth))
```

### Find suitable locations for Oysters

```{r}
# reclassify SST and depth data into locations that are suitable for oysters (hint: set suitable values to 1 and unsuitable values to 0)
sst_reclass <- matrix(c(-Inf, 11, 0,
                        11, 30, 1,
                        30, Inf, 0),
                      ncol = 3,
                      byrow= TRUE)

depth_reclass <- matrix(c(-Inf, 0, 0,
                        0, 70, 1,
                        70, Inf, 0),
                      ncol = 3,
                      byrow= TRUE)
```

```{r}
# Apply matrices to reclassify depth and sst rasters for Oyster suitability
optimal_sst <- classify(avg_sst_c,
                        rcl = sst_reclass)

optimal_depth <- classify(depth,
                        rcl = depth_reclass)
```

```{r}
# Find locations that satisfy both SST and depth conditions
# HINT: The SST and depth rasters should now identify the suitability of locations as 0 or 1. To find locations that have both suitable temperature and depth, you can use map algebra. One idea is to multiply the values in each raster cell, using the lapp() function.

optimal_fun <- function(sst, depth) {
  sst * depth
    }

optimal_locs <- lapp(c(optimal_sst, optimal_depth), fun = optimal_fun)

# Plot optimal locations
plot(optimal_locs)
```

### Determine the most suitable EEZ for Oysters

```{r}
# Select suitable cells within West Coast EEZs, using `mask()` within cellSize()

optimal_locs_mask <- cellSize(x = optimal_locs, # area of cells
                              mask = TRUE,
                              unit = 'km',
                              transform = TRUE)

# Plot to view the mask
plot(optimal_locs_mask)
  
```

```{r}
# Find the total suitable area within each EEZ (hint: it might be helpful to rasterize the EEZ data)

# Rasterize wc_regions data
eez_raster <- rasterize(x = wc_regions,
                        y = optimal_locs,
                        field = 'rgn')

# View raster to confirm change
plot(eez_raster)
```

```{r}
# Total suitable area can be found with zonal function from terra. 
```

## Now, let's look at the Common cuttlefish (*Sepia officinalis*)

```{r}

```
